{"version":3,"sources":["components/search/SearchPage.js","api/ArtistApi.js","services/ArtistService.js","App.js","reportWebVitals.js","index.js"],"names":["SearchPage","props","useState","artists","setArtists","history","useHistory","goToArtistPage","artistId","push","className","id","type","placeholder","aria-label","aria-describedby","onKeyDown","event","key","target","value","length","search","artistService","find","then","results","catch","error","console","map","artist","tabIndex","onClick","onKeyPress","e","name","ArtistApi","client","this","query","gql","ArtistService","a","data","App","init","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","basename","exect","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIe,SAASA,EAAWC,GAE/B,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cAaVC,EAAiB,SAACC,GACpBH,EAAQI,KAAR,kBAAwBD,KAG5B,OACI,qBAAKE,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,4CACA,sBAAKA,UAAU,mBAAf,UACI,sBAAMA,UAAU,mBAAmBC,GAAG,eAAtC,SACI,cAAC,IAAD,MAEJ,uBAAOC,KAAK,OAAOF,UAAU,eAAeG,YAAY,uBACrCC,aAAW,sBAAsBC,mBAAiB,eACrEC,UAzBU,SAACC,GACvB,GAAkB,UAAdA,EAAMC,KAAmBD,EAAME,OAAOC,MAAMC,QAAU,EAAG,CACzD,IAAMC,EAASL,EAAME,OAAOC,MAC5BnB,EAAMsB,cAAcC,KAAKF,GAAQG,MAAK,SAACC,GACnCtB,EAAWsB,EAAQvB,YACpBwB,OAAM,SAACC,GACNC,QAAQD,MAAMA,aAuBd,oBAAIlB,UAAU,4BAAd,SAEQP,EAAQ2B,KAAI,SAACC,GACT,OAAO,oBAAIrB,UAAU,kBAAkBsB,SAAS,IACrCC,QAAS,kBAAI1B,EAAewB,EAAOpB,KACnCuB,WAAY,SAACC,GAAD,MAAiB,UAAVA,EAAEjB,IAAkBX,EAAewB,EAAOpB,IAAM,MAFvE,SAE8EoB,EAAOK,MAFnCL,EAAOpB,c,sCCvCvE0B,E,yFAGjB,SAAYC,GACRC,KAAKD,OAASA,I,oBAGlB,SAAchB,GACV,IAAMkB,EAAQC,YAAH,0IACYnB,GAKvB,OAAOiB,KAAKD,OAAOE,MAAM,CAACA,MAAOA,Q,sDCdpBE,E,2HACjB,WAAWpB,GAAX,eAAAqB,EAAA,sEAC0BN,EAAUf,OAAOA,GAD3C,cACUI,EADV,yBAEWA,EAAQkB,MAFnB,2C,8DCkBWC,MAdf,WACIR,EAAUS,KAAK,IAAIC,IAAa,CAC5BC,KAAM,IAAIC,IAAS,CAACC,IAAK,uEACzBC,MAAO,IAAIC,OAGf,IAAM7B,EAAgB,IAAImB,EAC1B,OACI,cAAC,IAAD,CAAYW,SAAS,IAArB,SACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAI,cAACxD,EAAD,CAAYuB,cAAeA,UCJ7DkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c61b8e11.chunk.js","sourcesContent":["import { Search } from 'react-bootstrap-icons';\nimport {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nexport default function SearchPage(props) {\n\n    const [artists, setArtists] = useState([]);\n    const history = useHistory();\n\n    const searchBarKeyPress = (event) => {\n        if (event.key === 'Enter' || event.target.value.length >= 4) {\n            const search = event.target.value;\n            props.artistService.find(search).then((results)=>{\n                setArtists(results.artists);\n            }).catch((error)=>{\n                console.error(error);\n            });\n        }\n    }\n\n    const goToArtistPage = (artistId) => {\n        history.push(`/artist/${artistId}`);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Tune Cloud</h1>\n                <div className=\"input-group w-50\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <Search />\n                    </span>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search for an artist\"\n                                       aria-label=\"Input group example\" aria-describedby=\"basic-addon1\"\n                    onKeyDown={searchBarKeyPress}\n                    />\n                </div>\n\n                <ul className=\"list-group search-results\">\n                    {\n                        artists.map((artist)=>{\n                            return <li className=\"list-group-item\" tabIndex='0' key={artist.id}\n                                       onClick={()=>goToArtistPage(artist.id)}\n                                       onKeyPress={(e) => e.key === 'Enter' ? goToArtistPage(artist.id) : null}>{artist.name}</li>\n                        })\n                    }\n                </ul>\n\n            </header>\n        </div>\n    );\n}\n","import {gql} from \"@apollo/client\";\n\nexport default class ArtistApi {\n    static client;\n\n    static init(client) {\n        this.client = client;\n    }\n\n    static search(search) {\n        const query = gql`query {\n            artists(search: \"${search}\") {\n                id\n                name\n            }\n        }`;\n        return this.client.query({query: query});\n    }\n}\n","import ArtistApi from \"../api/ArtistApi\";\n\nexport default class ArtistService {\n    async find(search) {\n        const results = await ArtistApi.search(search);\n        return results.data;\n    }\n}\n","import {HashRouter, Route} from 'react-router-dom';\nimport './App.css';\nimport SearchPage from \"./components/search/SearchPage\";\nimport ArtistApi from \"./api/ArtistApi\";\nimport {ApolloClient, HttpLink, InMemoryCache} from \"@apollo/client\";\nimport ArtistService from \"./services/ArtistService\";\n\nfunction App() {\n    ArtistApi.init(new ApolloClient({\n        link: new HttpLink({uri: 'https://nbl977s1aj.execute-api.us-east-1.amazonaws.com/dev/graphql'}),\n        cache: new InMemoryCache(),\n    }));\n\n    const artistService = new ArtistService();\n    return (\n        <HashRouter basename='/'>\n            <Route exect path='/' component={()=><SearchPage artistService={artistService}/>} />\n        </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}